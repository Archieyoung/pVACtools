Version 1.3
___________

1.3.0
-----

This version adds a few features and updates:

- pVACvector now accepts a list of spacers to use when testing junction
  epitopes. These can be specified using the ``--spacers`` parameter with a
  comma-separated list of spacer peptides. Including the string ``None`` will
  also test each junction without spacers. The default is
  ``None,HH,HHC,HHH,HHHD,HHHC,AAY,HHHH,HHAA,HHL,AAL``
- The ``--expn-val`` cutoff parameter has been updated to be a float instead
  of an integer. This allows the user to provide a decimal
  cuttoff for the filtering on gene and transcript expression values.
  Previously, only whole numbers were accepted.
- Decimal numbers in the pVACseq reports are now rounded to three decimal
  places. Previously, they were not rounded.

In addition, this version also fixes a few bugs:

- The ``--normal-vaf`` cutoff value was incorrectly defaulting to 0.2 instead
  of 0.02. This resulted in the coverage filter not being as stringent as it
  should've been.
- There were a number of bugs in pVACapi and pVACviz that would prevent a user
  from submitting jobs using the interface in certain conditions. These have been resolved.
- pVACseq would previsouly not support SVs in the input VCF where the alt had
  a value of ``<DEL>``. These kinds of variants are now supported.

1.3.1
-----

This version is a hotfix release. It fixes the following issues:

- Some prediction algorithms might predict a binding affinity of 0 which could
  lead to division by 0 errors when calculating the fold change. In this
  situation we now set the fold change to ``inf`` (infinity).
- Previously the ``--maximum-transcript-support-level`` threshold was not
  getting propagated to the main pipeline step correctly, resulting in errors
  in the transcript support level filter.
- There was a bug in the multithreading logic that would result in
  certain steps getting executed more than once, which in turn would lead to
  FileNotFound errors when these duplicate executions were happening at the
  same time.

1.3.2
-----

This version is a hotfix release. It fixes the following issues:

- A bug in the parsing code of the binding prediction output files would
  result in only some binding predictionn output files getting processed when using multithreading.
  This would potentially cause incomplete output reports that were missing
  predictions for some input variants. pVACseq, pVACfuse, and
  pVACvector runs that were done without multithreading should've been
  unaffected by this bug.
